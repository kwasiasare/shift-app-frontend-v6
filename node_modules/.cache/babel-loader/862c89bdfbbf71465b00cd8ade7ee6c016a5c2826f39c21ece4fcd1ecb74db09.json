{"ast":null,"code":"//staging\nimport React,{useState,useEffect,useCallback}from\"react\";import ShiftForm from\"./components/ShiftForm\";import ShiftTable from\"./components/ShiftTable\";import{Container,Typography,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle,Button,Snackbar,Alert}from\"@mui/material\";import{createTheme,ThemeProvider}from\"@mui/material/styles\";import\"./App.css\";import{readShifts,createShift,updateShift,deleteShift}from\"./api\";// Custom theme\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const theme=createTheme({palette:{primary:{main:\"#00796b\"},secondary:{main:\"#004d40\"},background:{default:\"#e0f7fa\"}},typography:{fontFamily:\"Roboto, sans-serif\"}});const App=()=>{const[shifts,setShifts]=useState([]);const[currentShift,setCurrentShift]=useState(null);const[isEditing,setIsEditing]=useState(false);const[deleteId,setDeleteId]=useState(null);// Change to store _id\nconst[isDialogOpen,setIsDialogOpen]=useState(false);const[isFormVisible,setFormVisible]=useState(false);// New state for form visibility\n// Snackbar state\nconst[snackbar,setSnackbar]=useState({open:false,message:\"\",severity:\"success\"});// Snackbar handlers\nconst showSnackbar=function(message){let severity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"success\";setSnackbar({open:true,message,severity});};const closeSnackbar=()=>{setSnackbar(prev=>({...prev,open:false}));};// Fetch shift on mount\nconst readShiftsFromAPI=useCallback(async()=>{try{const shiftsData=await readShifts();setShifts(shiftsData);showSnackbar(\"Shifts fetched successfully\",\"success\");}catch(error){console.error(\"Error fetching shifts:\",error);showSnackbar(\"Failed to fetch shifts\",\"error\");}},[]);// Empty dependency array because no dependencies are used within the function\nuseEffect(()=>{readShiftsFromAPI();},[readShiftsFromAPI]);// Add as a dependency\nconst handleAddShift=async newShift=>{// Optimistically add the shift to the state\nconst tempId=Date.now();// Temporary ID for the new shift\nconst optimisticShift={...newShift,_id:tempId};setShifts(prevShifts=>[...prevShifts,optimisticShift]);try{const addedShift=await createShift(newShift);// Replace the temporary shift with the actual one from the API\nsetShifts(prevShifts=>prevShifts.map(shift=>shift._id===tempId?addedShift:shift));showSnackbar(\"Shift added successfully\",\"success\");resetForm();// Reset the form after addition\nsetFormVisible(false);// Hide form after successful addition\n}catch(error){console.error(\"Error adding shift:\",error);// Rollback the optimistic update\nsetShifts(prevShifts=>prevShifts.filter(shift=>shift._id!==tempId));showSnackbar(\"Failed to add shift\",\"error\");}};const handleEditShift=shiftId=>{const shiftToEdit=shifts.find(shift=>shift._id===shiftId);setCurrentShift(shiftToEdit);setIsEditing(true);setFormVisible(true);// Show form when editing\n};const handleUpdateShift=async updatedShift=>{try{const updatedShiftData=await updateShift(updatedShift._id,updatedShift);setShifts(prevShifts=>prevShifts.map(shift=>shift._id===updatedShiftData._id?updatedShiftData:shift));setIsEditing(false);setCurrentShift(null);showSnackbar(\"Shift updated successfully\",\"success\");setFormVisible(false);// Hide form after update\nresetForm();}catch(error){console.error(\"Error updating shift:\",error);showSnackbar(\"Failed to update shift\",\"error\");}};const handleDeleteShift=shiftId=>{setDeleteId(shiftId);setIsDialogOpen(true);};const confirmDelete=async()=>{try{await deleteShift(deleteId);setShifts(prevShifts=>prevShifts.filter(shift=>shift._id!==deleteId));setIsDialogOpen(false);setDeleteId(null);showSnackbar(\"Shift deleted successfully\",\"success\");}catch(error){console.error(\"Error deleting shift:\",error);showSnackbar(\"Failed to delete shift\",\"error\");}};const cancelDelete=()=>{setIsDialogOpen(false);setDeleteId(null);};const resetForm=()=>{setIsEditing(false);setCurrentShift(null);};const toggleFormVisibility=()=>{setFormVisible(prev=>!prev);if(isEditing){setIsEditing(false);setCurrentShift(null);}};return/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",align:\"center\",gutterBottom:true,children:\"Shift Management\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:toggleFormVisibility,style:{marginBottom:\"16px\"},children:isFormVisible?\"Hide Form\":\"Add Shift\"}),isFormVisible&&/*#__PURE__*/_jsx(ShiftForm,{onAddShift:handleAddShift,currentShift:currentShift,isEditing:isEditing,onUpdateShift:handleUpdateShift}),/*#__PURE__*/_jsx(ShiftTable,{shifts:shifts,onEdit:handleEditShift,onDelete:handleDeleteShift}),/*#__PURE__*/_jsxs(Dialog,{open:isDialogOpen,onClose:cancelDelete,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Confirm Delete\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(DialogContentText,{children:\"Are you sure you want to delete this shift?\"})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:cancelDelete,color:\"primary\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:confirmDelete,color:\"secondary\",autoFocus:true,children:\"OK\"})]})]}),/*#__PURE__*/_jsx(Snackbar,{open:snackbar.open// Controls visibility\n,autoHideDuration:3000// Closes automatically after 3 seconds\n,onClose:closeSnackbar// Close event handler\n,children:/*#__PURE__*/_jsx(Alert,{onClose:closeSnackbar// Close alert manually\n,severity:snackbar.severity// Type of message ('success', 'error', etc.)\n,sx:{width:\"100%\"}// Full-width styling\n,children:snackbar.message})})]})});};export default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","ShiftForm","ShiftTable","Container","Typography","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","Snackbar","Alert","createTheme","ThemeProvider","readShifts","createShift","updateShift","deleteShift","jsx","_jsx","jsxs","_jsxs","theme","palette","primary","main","secondary","background","default","typography","fontFamily","App","shifts","setShifts","currentShift","setCurrentShift","isEditing","setIsEditing","deleteId","setDeleteId","isDialogOpen","setIsDialogOpen","isFormVisible","setFormVisible","snackbar","setSnackbar","open","message","severity","showSnackbar","arguments","length","undefined","closeSnackbar","prev","readShiftsFromAPI","shiftsData","error","console","handleAddShift","newShift","tempId","Date","now","optimisticShift","_id","prevShifts","addedShift","map","shift","resetForm","filter","handleEditShift","shiftId","shiftToEdit","find","handleUpdateShift","updatedShift","updatedShiftData","handleDeleteShift","confirmDelete","cancelDelete","toggleFormVisibility","children","variant","align","gutterBottom","color","onClick","style","marginBottom","onAddShift","onUpdateShift","onEdit","onDelete","onClose","autoFocus","autoHideDuration","sx","width"],"sources":["/Users/kwasi/Desktop/shift-app-frontend-v6/src/App.js"],"sourcesContent":["//staging\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport ShiftForm from \"./components/ShiftForm\";\nimport ShiftTable from \"./components/ShiftTable\";\nimport {\n  Container,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n  Snackbar,\n  Alert\n} from \"@mui/material\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport \"./App.css\";\nimport { readShifts, createShift, updateShift, deleteShift } from \"./api\";\n\n// Custom theme\nconst theme = createTheme({\n  palette: {\n    primary: { main: \"#00796b\" },\n    secondary: { main: \"#004d40\" },\n    background: { default: \"#e0f7fa\" },\n  },\n  typography: { fontFamily: \"Roboto, sans-serif\" },\n});\n\nconst App = () => {\n  const [shifts, setShifts] = useState([]);\n  const [currentShift, setCurrentShift] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [deleteId, setDeleteId] = useState(null); // Change to store _id\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isFormVisible, setFormVisible] = useState(false); // New state for form visibility\n\n  // Snackbar state\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: \"\",\n    severity: \"success\",\n  });\n  \n  // Snackbar handlers\n  const showSnackbar = (message, severity = \"success\") => {\n    setSnackbar({ open: true, message, severity });\n  };\n\n  const closeSnackbar = () => {\n    setSnackbar((prev) => ({ ...prev, open: false }));\n  };\n  \n  // Fetch shift on mount\n  const readShiftsFromAPI = useCallback(async () => {\n    try {\n      const shiftsData = await readShifts();\n      setShifts(shiftsData);\n      showSnackbar(\"Shifts fetched successfully\", \"success\");\n    } catch (error) {\n      console.error(\"Error fetching shifts:\", error);\n      showSnackbar(\"Failed to fetch shifts\", \"error\");\n    }\n  }, []); // Empty dependency array because no dependencies are used within the function\n\n  useEffect(() => {\n    readShiftsFromAPI();\n  }, [readShiftsFromAPI]); // Add as a dependency\n\n  const handleAddShift = async (newShift) => {\n    // Optimistically add the shift to the state\n    const tempId = Date.now(); // Temporary ID for the new shift\n    const optimisticShift = { ...newShift, _id: tempId };\n\n    setShifts((prevShifts) => [...prevShifts, optimisticShift]);\n    \n    try {\n      const addedShift = await createShift(newShift);\n      // Replace the temporary shift with the actual one from the API\n      setShifts((prevShifts) =>\n        prevShifts.map((shift) =>\n          shift._id === tempId ? addedShift : shift\n        )\n      );\n\n      showSnackbar(\"Shift added successfully\", \"success\");\n      resetForm(); // Reset the form after addition\n      setFormVisible(false); // Hide form after successful addition\n    } catch (error) {\n      console.error(\"Error adding shift:\", error);\n\n      // Rollback the optimistic update\n      setShifts((prevShifts) =>\n        prevShifts.filter((shift) => shift._id !== tempId)\n      );\n\n      showSnackbar(\"Failed to add shift\", \"error\");\n    }\n  };\n\n  const handleEditShift = (shiftId) => {\n    const shiftToEdit = shifts.find(shift => shift._id === shiftId);\n    setCurrentShift(shiftToEdit);\n    setIsEditing(true);\n    setFormVisible(true); // Show form when editing\n  };\n\n  const handleUpdateShift = async (updatedShift) => {\n    try {\n      const updatedShiftData = await updateShift(\n        updatedShift._id,\n        updatedShift\n      );\n      setShifts((prevShifts) =>\n        prevShifts.map((shift) =>\n          shift._id === updatedShiftData._id ? updatedShiftData : shift\n        )\n      );\n      setIsEditing(false);\n      setCurrentShift(null);\n      showSnackbar(\"Shift updated successfully\", \"success\");\n      setFormVisible(false); // Hide form after update\n      resetForm();\n    } catch (error) {\n      console.error(\"Error updating shift:\", error);\n      showSnackbar(\"Failed to update shift\", \"error\");\n    }\n  };\n\n  const handleDeleteShift = (shiftId) => {\n    setDeleteId(shiftId);\n    setIsDialogOpen(true);\n  };\n\n  const confirmDelete = async () => {\n    try {\n      await deleteShift(deleteId);\n      setShifts((prevShifts) => prevShifts.filter((shift) => shift._id !== deleteId));\n      setIsDialogOpen(false);\n      setDeleteId(null);\n      showSnackbar(\"Shift deleted successfully\", \"success\");\n    } catch (error) {\n      console.error(\"Error deleting shift:\", error);\n      showSnackbar(\"Failed to delete shift\", \"error\");\n    }\n  };\n\n  const cancelDelete = () => {\n    setIsDialogOpen(false);\n    setDeleteId(null);\n  };\n\n  const resetForm = () => {\n    setIsEditing(false);\n    setCurrentShift(null);\n  };\n\n  const toggleFormVisibility = () => {\n    setFormVisible((prev) => !prev);\n    if (isEditing) {\n      setIsEditing(false);\n      setCurrentShift(null);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>\n          Shift Management\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={toggleFormVisibility}\n          style={{ marginBottom: \"16px\" }}\n        >\n          {isFormVisible ? \"Hide Form\" : \"Add Shift\"}\n        </Button>\n        {isFormVisible && (\n          <ShiftForm\n            onAddShift={handleAddShift}\n            currentShift={currentShift}\n            isEditing={isEditing}\n            onUpdateShift={handleUpdateShift}\n          />\n        )}\n        <ShiftTable\n          shifts={shifts}\n          onEdit={handleEditShift}\n          onDelete={handleDeleteShift}\n        />\n        <Dialog open={isDialogOpen} onClose={cancelDelete}>\n          <DialogTitle>Confirm Delete</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Are you sure you want to delete this shift?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={cancelDelete} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={confirmDelete} color=\"secondary\" autoFocus>\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Snackbar\n          open={snackbar.open} // Controls visibility\n          autoHideDuration={3000} // Closes automatically after 3 seconds\n          onClose={closeSnackbar} // Close event handler\n        >\n          <Alert\n            onClose={closeSnackbar} // Close alert manually\n            severity={snackbar.severity} // Type of message ('success', 'error', etc.)\n            sx={{ width: \"100%\" }} // Full-width styling\n          >\n            {snackbar.message} \n          </Alert>\n        </Snackbar>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\n\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}